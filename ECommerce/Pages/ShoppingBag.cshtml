@page
@using ECommerce.Pages
@model ECommerce.Pages.ShoppingBagModel
@{
    ViewData["Title"] = "ShoppingBag";
}
@{ var subtotal = 0.00; }
@Html.AntiForgeryToken()

<strong><h4>My Bag</h4></strong>
<hr />

<div class="row">
    @{
        if (Model.ShoppingBagItems.Count > 0)
        {
            <div class="col-lg-5">
                @foreach (var item in Model.ShoppingBagItems)
                {
                    <div data-id="@item.Product.Id" data-quantity="@item.Quantity" class="card mb-3" style="max-width: 540px;">
                        <div class="row no-gutters">
                            <div class="col-md-4">
                                <img src="images/Products/@item.Product.Image" class="card-img" alt="...">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <button class="close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                    <h5 class="card-title">@item.Product.Name</h5>
                                    <p class="card-text">@item.Price.ToString("C")</p>
                                    <input class="card-text text-center" value="@item.Quantity" size="1" />
                                    <a class="heart">
                                        <button class="btn-borderless" onClick="addToWishList()">
                                            <i class="far fa-heart heart-empty"></i>
                                            <i class="fas fa-heart heart-solid"></i>
                                            &nbsp;&nbsp;&nbsp;Add to Wish List
                                        </button>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    subtotal += item.Price;
                }
                <strong>Subtotal - @subtotal.ToString("C")</strong>
            </div>
        }
        else
        {
            <div class="col-lg-5">
                <p class="lead">Cart is empty :(</p>
            </div>
        }
    }

    <div id="paypal-button-container" class="card col-lg-4" style="height: 20rem">
        <strong>TOTAL</strong>
        <hr />
        <table>
            <tr>
                <td><strong>Subtotal</strong></td>
                <td class="text-right">@subtotal.ToString("C")</td>
            </tr>
            <tr>
                <td><strong>Delivery</strong></td>
                <td class="text-right">N/A</td>
            </tr>
        </table>
        <hr />
    </div>
</div>

<script>
    paypal.Buttons({
        createOrder: function (data, actions) {
            return actions.order.create({
                purchase_units: [{
                    amount: {
                        value: '@subtotal'
                    }
                }]
            });
        },
        onApprove: function (data, actions) {
            // Capture the funds from the transaction
            return actions.order.capture().then(function(details) {
                // Show a success message to your buyer
                alert('Transaction completed by ' + details.purchase_units[0].amount.value + ' Transaction completed by ' + details.payer.name.given_name);
                $.ajax({
                    type: 'POST',
                    url: 'ShoppingBag?handler=Checkout',
                    headers: {
                        "XSRF-TOKEN": $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    contentType: 'application/json; charset=utf-8',
                    dataType: 'json',
                    data: details.purchase_units[0].amount.value,
                    success: function (response) {

                    },
                    complete: function (response) {
                        console.log("Payment complete");
                    }
                });
            });
        }
    }).render('#paypal-button-container');

    $('.close').on('click',
        function (e) {
            var temp = $(this).closest('div.card');
            var id = temp.data('id');

            $.ajax({
                type: 'POST',
                url: 'ShoppingBag?handler=Delete',
                headers: {
                    "XSRF-TOKEN": $('input:hidden[name="__RequestVerificationToken"]').val()
                },
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                data: '' + id + '',
                success: function (response) {

                },
                complete: function (response) {
                    console.log("Complete works");
                    temp.fadeOut();
                }
            });
        }
    );

    function addToWishList() {
        var temp = $("div.card");
        var id = temp.data('id');
        $.ajax({
            type: 'POST',
            url: 'ShoppingBag?handler=WishList',
            headers: {
                "XSRF-TOKEN": $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            data: '' + id + '',
            success: function(response) {

            },
            complete: function(response) {
                console.log("Complete works");
            }
        });
    }
</script>
